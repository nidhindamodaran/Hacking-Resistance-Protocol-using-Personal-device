/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MailSettingsJDialog.java
 *
 * Created on Aug 25, 2011, 11:48:11 PM
 */
package com.hrp.main.gui;

import com.hrp.util.AppVariables;
import com.hrp.util.Validation;
import com.hrp.mail.mgr.ManageMail;
import com.hrp.mail.utils.MailConstants;
import com.hrp.mail.utils.MailSettings;
import com.hrp.mail.utils.MailSettingsManager;
import javax.swing.JOptionPane;

/**
 *
 * @author TF-PRG-03
 */
public class MailSettingsJDialog extends javax.swing.JDialog {

    /**
     * Creates new form MailSettingsJDialog
     */
    MailSettingsManager settingsManager = null;
    MailSettingsJDialog dialog = this;

    public MailSettingsJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadPreviousSettingInfo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mailIDTextField = new javax.swing.JTextField();
        emailPasswordField = new javax.swing.JPasswordField();
        closeButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        verifyingLabel = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mail Settings");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mail Settings"));

        jLabel1.setText("Mail id :");

        jLabel2.setText("Password:");

        mailIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailIDTextFieldActionPerformed(evt);
            }
        });
        mailIDTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mailIDTextFieldFocusLost(evt);
            }
        });

        emailPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailPasswordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(mailIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mailIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(emailPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrp/icon/imgres.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(verifyingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(closeButton))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(closeButton)
                        .addComponent(saveButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(verifyingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mailIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mailIDTextFieldActionPerformed
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        Validation validation = new Validation();
        String mailID = mailIDTextField.getText();
        String emailPassword = new String(emailPasswordField.getPassword());

        if (!mailID.equals("") || !emailPassword.equals("")) {
            if (validation.validateEmail(mailID)) {
                verifyingLabel.setText("verifying ...");
                jProgressBar.setIndeterminate(true);
                new Thread(new Runnable() {

                    public void run() {
                        ManageMail mail = new ManageMail();
                        if (mail.checkMail(mailIDTextField.getText(), new String(emailPasswordField.getPassword()))) {
                            AppVariables.mailSettingsInfo.setMailID(mailIDTextField.getText());
                            AppVariables.mailSettingsInfo.setPassword(new String(emailPasswordField.getPassword()));
                            new MailSettingsManager().saveSettings();
                            verifyingLabel.setText("");
                            jProgressBar.setIndeterminate(false);
                            verifyingLabel.setText("Downloading...");
                            mail.startMailDownloading();
                            verifyingLabel.setText("");
                            dialog.dispose();
                            jProgressBar.setIndeterminate(false);
                            verifyingLabel.setText("");
                        } else {
                            JOptionPane.showMessageDialog(dialog, "please check the email account info "
                                    + "\n or verify the internet connection ", mailIDTextField.getText(), WIDTH);
                        }
                    }
                }).start();

            } else {
                JOptionPane.showMessageDialog(this, "invalid email id", "invalid Field", JOptionPane.OK_OPTION);
            }
        } else {
            JOptionPane.showMessageDialog(this, "please fill all fields ", "invalid Filed", JOptionPane.OK_OPTION);
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void emailPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailPasswordFieldActionPerformed

    private void mailIDTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mailIDTextFieldFocusLost
        // TODO add your handling code here:
        if (!Validation.validateEmail(mailIDTextField.getText())) {
            JOptionPane.showMessageDialog(dialog, "please verify the email id. "
                    + "\n  ", mailIDTextField.getText(), WIDTH);
            mailIDTextField.setText("");
        }
    }//GEN-LAST:event_mailIDTextFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MailSettingsJDialog dialog = new MailSettingsJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JPasswordField emailPasswordField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField mailIDTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel verifyingLabel;
    // End of variables declaration//GEN-END:variables

    private void loadPreviousSettingInfo() {
        MailSettings mailSettings = AppVariables.mailSettingsInfo;
        if (mailSettings != null) {
            String mailId = mailSettings.getMailID();
            String password = mailSettings.getPassword().trim();
            mailIDTextField.setText(mailId);
            emailPasswordField.setText(password);
        }
    }
}
